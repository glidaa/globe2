{"ast":null,"code":"import _classCallCheck from\"/Users/michaelcastleman/Documents/Personal/GLidaa/24 svg/globe2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/michaelcastleman/Documents/Personal/GLidaa/24 svg/globe2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/michaelcastleman/Documents/Personal/GLidaa/24 svg/globe2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/michaelcastleman/Documents/Personal/GLidaa/24 svg/globe2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import*as THREE from'three';import MetalSphere from'../Components/3D/MetalSphere.three';import Loading from'./../Components/Loading.component';import{handleSceneResize,initEventListener}from'./../Utils/sceneResize';import{OrbitControls}from\"three/examples/jsm/controls/OrbitControls.js\";import{Coordinates}from'../Coordinates';import fragment from'../shaders/fragment.glsl';import vertex from'../shaders/vertex.glsl';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainScene=/*#__PURE__*/function(_React$Component){_inherits(MainScene,_React$Component);var _super=_createSuper(MainScene);function MainScene(props){var _this;_classCallCheck(this,MainScene);_this=_super.call(this,props);_this.initScene=function(){//init Loading Manager\nvar loadingManager=new THREE.LoadingManager();loadingManager.onLoad=function(){_this.setState({loading:false},function(){});};//init Renderer\n_this.renderer=new THREE.WebGLRenderer({antialias:true,alpha:false});_this.renderer.setPixelRatio(window.devicePixelRatio);_this.renderer.autoClear=false;_this.renderer.setClearColor(new THREE.Color(0x222222));_this.renderer.setSize(_this.divRef.current.offsetWidth,_this.divRef.current.offsetHeight);_this.divRef.current.appendChild(_this.renderer.domElement);//init Scene\n_this.scene=new THREE.Scene();_this.scene.background=new THREE.Color(0x222222);//init Camera\n_this.camera=new THREE.PerspectiveCamera(7,_this.divRef.current.offsetWidth/_this.divRef.current.offsetHeight,0.1,1000);_this.camera.position.x=30;_this.controls=new OrbitControls(_this.camera,_this.renderer.domElement);//Model\nvar sphere=new MetalSphere().create(loadingManager);_this.scene.add(sphere);// Ambient Light\nvar ambientLight=new THREE.AmbientLight(0xFFFFFF);ambientLight.intensity=1;_this.scene.add(ambientLight);var hemiLight=new THREE.HemisphereLight(0xffeeb1,0x080820,4);_this.scene.add(hemiLight);//Directional Light\nvar directionalLight=new THREE.DirectionalLight(0xe8f7ff,4);directionalLight.position.set(5,15,70);_this.scene.add(directionalLight);//SpotLight\nvar light=new THREE.SpotLight(0xffa95c,4);light.position.set(-50,50,50);light.castShadow=true;_this.scene.add(light);function Conversion(lat,lng){var phi=(90-lat)*(Math.PI/180);var theta=(lng+180)*(Math.PI/180);var x=-(Math.sin(phi)*Math.cos(theta));var y=Math.sin(phi)*Math.sin(theta);var z=Math.cos(phi);return{x:x,y:y,z:z};}for(var i=0;i<Coordinates.length;i++){var pos=Conversion(Coordinates[i].lat,Coordinates[i].lng);var mesh=new THREE.Mesh(new THREE.SphereBufferGeometry(0.01,1,1),new THREE.MeshBasicMaterial({color:\"blue\"}));mesh.position.set(pos.x,pos.y,pos.z);_this.scene.add(mesh);if(i<Coordinates.length-1){var pos1=Conversion(Coordinates[i+1].lat,Coordinates[i+1].lng);_this.ConnectingLines(pos,pos1);}}//init Handle Resize\nhandleSceneResize(window,_this.camera,_this.renderer);initEventListener(window);_this.addObjects();var animate=function animate(){if(!_this.isPlaying)return;_this.time+=0.05;_this.materialShaders.uniforms.time.value=_this.time;requestAnimationFrame(animate);_this.renderer.render(_this.scene,_this.camera);if(_this.scene){var rotationRad=THREE.MathUtils.degToRad(.1);_this.scene.rotateY(rotationRad);}light.position.set(_this.camera.position.x+10,_this.camera.position.y+10,_this.camera.position.z+10);light.shadow.bias=-0.0001;light.shadow.mapSize.width=1024*4;light.shadow.mapSize.height=1024*4;};animate();};_this.state={loading:_this.props.loading?true:false};//3D Scene components\n_this.divRef=/*#__PURE__*/React.createRef();_this.renderer=null;_this.camera=null;_this.scene=null;_this.time=0;_this.isPlaying=true;_this.addObject=null;return _this;}_createClass(MainScene,[{key:\"componentDidMount\",value:function componentDidMount(){this.initScene();}},{key:\"stop\",value:function stop(){this.isPlaying=false;}},{key:\"play\",value:function play(){if(!this.isPlaying){this.render();this.isPlaying=true;}}},{key:\"addObjects\",value:function addObjects(){this.materialShaders=new THREE.ShaderMaterial({extensions:{derivatives:\"#extension GL_OES_standard_derivatives: enable\"},side:THREE.DoubleSide,uniforms:{time:{value:0},resolutiotion:{value:new THREE.Vector4()}},transparent:true,vertexShader:vertex,fragmentShader:fragment});}},{key:\"ConnectingLines\",value:function ConnectingLines(p1,p2){var v1=new THREE.Vector3(p1.x,p1.y,p1.z);var v2=new THREE.Vector3(p2.x,p2.y,p2.z);var points=[];for(var i=0;i<=20;i++){var p=new THREE.Vector3().lerpVectors(v1,v2,i/20);p.normalize();p.multiplyScalar(1+0.2*Math.sin(Math.PI*i/20));points.push(p);};var path=new THREE.CatmullRomCurve3(points);var geometry=new THREE.TubeBufferGeometry(path,20,0.005,8,false);var material=new THREE.LineBasicMaterial({color:\"pink\",linewidth:1,linecap:'round',//ignored by WebGLRenderer\nlinejoin:'round'//ignored by WebGLRenderer\n});// const material = this.materialShaders\nvar mesh=new THREE.Mesh(geometry,material);this.scene.add(mesh);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"three-container\",ref:this.divRef}),this.state.loading?/*#__PURE__*/_jsx(Loading,{}):'']});}}]);return MainScene;}(React.Component);export{MainScene as default};","map":{"version":3,"sources":["/Users/michaelcastleman/Documents/Personal/GLidaa/24 svg/globe2/src/Scenes/MainScene.component.js"],"names":["React","THREE","MetalSphere","Loading","handleSceneResize","initEventListener","OrbitControls","Coordinates","fragment","vertex","MainScene","props","initScene","loadingManager","LoadingManager","onLoad","setState","loading","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","autoClear","setClearColor","Color","setSize","divRef","current","offsetWidth","offsetHeight","appendChild","domElement","scene","Scene","background","camera","PerspectiveCamera","position","x","controls","sphere","create","add","ambientLight","AmbientLight","intensity","hemiLight","HemisphereLight","directionalLight","DirectionalLight","set","light","SpotLight","castShadow","Conversion","lat","lng","phi","Math","PI","theta","sin","cos","y","z","i","length","pos","mesh","Mesh","SphereBufferGeometry","MeshBasicMaterial","color","pos1","ConnectingLines","addObjects","animate","isPlaying","time","materialShaders","uniforms","value","requestAnimationFrame","render","rotationRad","MathUtils","degToRad","rotateY","shadow","bias","mapSize","width","height","state","createRef","addObject","ShaderMaterial","extensions","derivatives","side","DoubleSide","resolutiotion","Vector4","transparent","vertexShader","fragmentShader","p1","p2","v1","Vector3","v2","points","p","lerpVectors","normalize","multiplyScalar","push","path","CatmullRomCurve3","geometry","TubeBufferGeometry","material","LineBasicMaterial","linewidth","linecap","linejoin","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as THREE from 'three';\nimport MetalSphere from '../Components/3D/MetalSphere.three';\nimport Loading from './../Components/Loading.component';\nimport { handleSceneResize, initEventListener } from './../Utils/sceneResize';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport {Coordinates} from '../Coordinates'\nimport fragment from '../shaders/fragment.glsl';\nimport vertex from '../shaders/vertex.glsl'\n\n\nexport default class MainScene extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: this.props.loading ? true : false,\n        }\n        //3D Scene components\n        this.divRef = React.createRef();\n        this.renderer = null;\n        this.camera = null;\n        this.scene = null;\n        this.time = 0;\n        this.isPlaying = true;\n        this.addObject = null\n    }\n\n    componentDidMount() {\n        this.initScene();\n    }\n    initScene = () => {\n        //init Loading Manager\n        const loadingManager = new THREE.LoadingManager();\n        loadingManager.onLoad = () => {\n            this.setState({ loading: false }, () => { })\n        }\n\n        //init Renderer\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: false });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.autoClear = false;\n        this.renderer.setClearColor(new THREE.Color(0x222222));\n        this.renderer.setSize(this.divRef.current.offsetWidth, this.divRef.current.offsetHeight);\n        this.divRef.current.appendChild(this.renderer.domElement);\n\n        //init Scene\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0x222222);\n\n        //init Camera\n        this.camera = new THREE.PerspectiveCamera(7, this.divRef.current.offsetWidth / this.divRef.current.offsetHeight, 0.1, 1000);\n        this.camera.position.x = 30;\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n        //Model\n        let sphere = new MetalSphere().create(loadingManager);\n        this.scene.add(sphere);\n\n        // Ambient Light\n        let ambientLight = new THREE.AmbientLight(0xFFFFFF);\n        ambientLight.intensity = 1;\n        this.scene.add(ambientLight);\n        let hemiLight = new THREE.HemisphereLight(0xffeeb1, 0x080820, 4);\n        this.scene.add(hemiLight);\n\n        //Directional Light\n        let directionalLight = new THREE.DirectionalLight(0xe8f7ff, 4);\n        directionalLight.position.set(5, 15, 70);\n        this.scene.add(directionalLight);\n        \n        //SpotLight\n        let light = new THREE.SpotLight(0xffa95c,4);\n        light.position.set(-50,50,50);\n        light.castShadow = true;\n        this.scene.add( light );\n        \n        function Conversion(lat, lng){\n            let phi = (90-lat)*(Math.PI/180);\n            let theta = (lng+180)*(Math.PI/180);\n\n            let x = -(Math.sin(phi)*Math.cos(theta))\n            let y = (Math.sin(phi)*Math.sin(theta))\n            let z = (Math.cos(phi))\n\n            return{\n                x, y, z\n            }\n        }\n\n        for (let i = 0; i < Coordinates.length; i++) {\n            let pos = Conversion(Coordinates[i].lat, Coordinates[i].lng);\n\n            let mesh = new THREE.Mesh(\n                new THREE.SphereBufferGeometry(0.01, 1, 1),\n                new THREE.MeshBasicMaterial({color:\"blue\"})\n            )\n            mesh.position.set(pos.x,pos.y,pos.z)\n            this.scene.add(mesh)\n            if(i<Coordinates.length-1){\n                let pos1 = Conversion(Coordinates[i+1].lat, Coordinates[i+1].lng);\n                this.ConnectingLines(pos,pos1)\n            }\n            \n        }\n\n        //init Handle Resize\n        handleSceneResize(window, this.camera, this.renderer)\n        initEventListener(window);\n        this.addObjects()\n\n        const animate = () => {\n            if(!this.isPlaying) return;\n            this.time +=0.05;\n            this.materialShaders.uniforms.time.value = this.time;\n            requestAnimationFrame(animate);\n            this.renderer.render(this.scene, this.camera );\n            if (this.scene) {\n                let rotationRad = THREE.MathUtils.degToRad(.1);\n                this.scene.rotateY(rotationRad);\n               \n               \n            }\n            light.position.set( \n                this.camera.position.x + 10,\n                this.camera.position.y + 10,\n                this.camera.position.z + 10,\n              );\n              light.shadow.bias = -0.0001;\n              light.shadow.mapSize.width = 1024*4;\n              light.shadow.mapSize.height = 1024*4;\n        }\n        animate();\n    }\n    stop(){\n        this.isPlaying = false\n    }\n    play(){\n        if(!this.isPlaying){\n            this.render()\n            this.isPlaying = true\n        }\n    }\n    addObjects(){\n        this.materialShaders =  new THREE.ShaderMaterial({\n            extensions:{\n                derivatives:\"#extension GL_OES_standard_derivatives: enable\"\n            },\n            side:THREE.DoubleSide,\n            uniforms:{\n                time:{value:0},\n                resolutiotion:{value: new THREE.Vector4()}\n            },\n            transparent:true,\n            vertexShader: vertex,\n            fragmentShader: fragment\n        }) \n    }\n   \n    ConnectingLines(p1,p2){\n        let v1 = new THREE.Vector3(p1.x, p1.y, p1.z)\n        let v2 = new THREE.Vector3(p2.x, p2.y, p2.z)\n        let points = []\n        for (let i = 0; i <=20; i++) {\n            let p = new THREE.Vector3().lerpVectors(v1, v2, i/20)\n            p.normalize()\n            p.multiplyScalar(1 + 0.2*Math.sin(Math.PI*i/20)) \n            points.push(p)             \n        };\n    \n       \n        \n        const path = new THREE.CatmullRomCurve3(points)\n        const geometry = new THREE.TubeBufferGeometry(path, 20, 0.005, 8, false)\n        const material = new THREE.LineBasicMaterial( {\n            color: \"pink\",\n            linewidth: 1,\n            linecap: 'round', //ignored by WebGLRenderer\n            linejoin:  'round', //ignored by WebGLRenderer\n            \n        } )\n        // const material = this.materialShaders\n\n        const mesh = new THREE.Mesh( geometry, material );\n        this.scene.add( mesh );\n \n    }\n  \n\n    render() {\n        return (<>\n            <div className=\"three-container\" ref={this.divRef}></div>\n            {this.state.loading ? <Loading /> : ''}\n        </>)\n\n    }\n}"]},"metadata":{},"sourceType":"module"}