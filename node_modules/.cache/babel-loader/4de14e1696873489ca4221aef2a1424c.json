{"ast":null,"code":"export const handleSceneResize = (window, camera, renderer, composer) => {\n  //Resize renderer\n  if (renderer && window && camera) {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  if (composer && window && camera) {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    composer.setSize(window.innerWidth, window.innerHeight);\n  }\n};\nexport const initEventListener = window => {\n  //Add event listener to window object\n  if (window) {\n    window.addEventListener('resize', handleSceneResize);\n  }\n};","map":{"version":3,"sources":["/home/sourab/projects/React-JS-Three-JS-Boilerplate/src/Utils/sceneResize.js"],"names":["handleSceneResize","window","camera","renderer","composer","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","initEventListener","addEventListener"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA0BC,QAA1B,KAAsC;AACnE;AACA,MAAID,QAAQ,IAAIF,MAAZ,IAAsBC,MAA1B,EAAkC;AAC9BA,IAAAA,MAAM,CAACG,MAAP,GAAgBJ,MAAM,CAACK,UAAP,GAAoBL,MAAM,CAACM,WAA3C;AACAL,IAAAA,MAAM,CAACM,sBAAP;AACAL,IAAAA,QAAQ,CAACM,OAAT,CAAiBR,MAAM,CAACK,UAAxB,EAAoCL,MAAM,CAACM,WAA3C;AACH;;AACD,MAAIH,QAAQ,IAAIH,MAAZ,IAAsBC,MAA1B,EAAkC;AAC9BA,IAAAA,MAAM,CAACG,MAAP,GAAgBJ,MAAM,CAACK,UAAP,GAAoBL,MAAM,CAACM,WAA3C;AACAL,IAAAA,MAAM,CAACM,sBAAP;AACAJ,IAAAA,QAAQ,CAACK,OAAT,CAAiBR,MAAM,CAACK,UAAxB,EAAoCL,MAAM,CAACM,WAA3C;AACH;AAGJ,CAdM;AAgBP,OAAO,MAAMG,iBAAiB,GAAIT,MAAD,IAAW;AACpC;AACA,MAAGA,MAAH,EAAU;AACNA,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,iBAAlC;AACH;AACR,CALM","sourcesContent":["export const handleSceneResize = (window, camera, renderer,composer) =>{\n    //Resize renderer\n    if (renderer && window && camera) {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    if (composer && window && camera) {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        composer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n\n}\n\nexport const initEventListener = (window) =>{\n        //Add event listener to window object\n        if(window){\n            window.addEventListener('resize', handleSceneResize);\n        }\n}"]},"metadata":{},"sourceType":"module"}