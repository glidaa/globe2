{"ast":null,"code":"import _classCallCheck from\"/Users/michaelcastleman/Documents/Personal/GLidaa/24 svg/globe2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import*as THREE from'three';import metalTexture from'./../../Assets/Textures/earth.jpg';var MetalSpshere=function MetalSpshere(){_classCallCheck(this,MetalSpshere);this.create=function(loadingManager){var geometry=new THREE.SphereBufferGeometry(1,40,40);var loader=new THREE.TextureLoader(loadingManager);var texture=loader.load(metalTexture);var material=new THREE.MeshStandardMaterial({map:texture,metalness:.9,roughness:.65,emissive:0x222529});//Assign geometry and material to the mesh\nvar mesh=new THREE.Mesh(geometry,material);//Return the mesh\nreturn mesh;};};export{MetalSpshere as default};","map":{"version":3,"sources":["/Users/michaelcastleman/Documents/Personal/GLidaa/24 svg/globe2/src/Components/3D/MetalSphere.three.js"],"names":["THREE","metalTexture","MetalSpshere","create","loadingManager","geometry","SphereBufferGeometry","loader","TextureLoader","texture","load","material","MeshStandardMaterial","map","metalness","roughness","emissive","mesh","Mesh"],"mappings":"wLAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,mCAAzB,C,GAEqBC,CAAAA,Y,iEAEjBC,M,CAAS,SAACC,cAAD,CAAoB,CACzB,GAAIC,CAAAA,QAAQ,CAAG,GAAIL,CAAAA,KAAK,CAACM,oBAAV,CAA+B,CAA/B,CAAkC,EAAlC,CAAsC,EAAtC,CAAf,CACA,GAAIC,CAAAA,MAAM,CAAG,GAAIP,CAAAA,KAAK,CAACQ,aAAV,CAAwBJ,cAAxB,CAAb,CACA,GAAIK,CAAAA,OAAO,CAAGF,MAAM,CAACG,IAAP,CAAYT,YAAZ,CAAd,CACA,GAAIU,CAAAA,QAAQ,CAAG,GAAIX,CAAAA,KAAK,CAACY,oBAAV,CAA+B,CAC1CC,GAAG,CAAEJ,OADqC,CAE1CK,SAAS,CAAE,EAF+B,CAG1CC,SAAS,CAAE,GAH+B,CAI1CC,QAAQ,CAAE,QAJgC,CAA/B,CAAf,CAOA;AACA,GAAIC,CAAAA,IAAI,CAAG,GAAIjB,CAAAA,KAAK,CAACkB,IAAV,CAAeb,QAAf,CAAyBM,QAAzB,CAAX,CAEA;AACA,MAAOM,CAAAA,IAAP,CACH,C,UAlBgBf,Y","sourcesContent":["import * as THREE from 'three';\nimport metalTexture from './../../Assets/Textures/earth.jpg';\n\nexport default class MetalSpshere{\n    \n    create = (loadingManager) => {\n        let geometry = new THREE.SphereBufferGeometry(1, 40, 40);\n        let loader = new THREE.TextureLoader(loadingManager);\n        let texture = loader.load(metalTexture);\n        let material = new THREE.MeshStandardMaterial({\n            map: texture,\n            metalness: .9,\n            roughness: .65,\n            emissive: 0x222529,\n        });\n\n        //Assign geometry and material to the mesh\n        let mesh = new THREE.Mesh(geometry, material);\n\n        //Return the mesh\n        return mesh;\n    }\n}"]},"metadata":{},"sourceType":"module"}