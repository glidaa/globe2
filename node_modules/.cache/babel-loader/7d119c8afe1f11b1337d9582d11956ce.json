{"ast":null,"code":"import * as THREE from 'three';\nimport metalTexture from './../../Assets/Textures/earth.jpg';\nexport default class MetalSpshere {\n  constructor() {\n    this.create = loadingManager => {\n      let geometry = new THREE.SphereBufferGeometry(1, 34, 34);\n      let loader = new THREE.TextureLoader(loadingManager);\n      let texture = loader.load(metalTexture);\n      let material = new THREE.MeshStandardMaterial({\n        map: texture,\n        metalness: .9,\n        roughness: .65,\n        emissive: 0x222529\n      }); //Assign geometry and material to the mesh\n\n      let mesh = new THREE.Mesh(geometry, material); //Return the mesh\n\n      return mesh;\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/sourab/projects/React-JS-Three-JS-Boilerplate/src/Components/3D/MetalSphere.three.js"],"names":["THREE","metalTexture","MetalSpshere","create","loadingManager","geometry","SphereBufferGeometry","loader","TextureLoader","texture","load","material","MeshStandardMaterial","map","metalness","roughness","emissive","mesh","Mesh"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA,eAAe,MAAMC,YAAN,CAAkB;AAAA;AAAA,SAC7BC,MAD6B,GACnBC,cAAD,IAAoB;AACzB,UAAIC,QAAQ,GAAG,IAAIL,KAAK,CAACM,oBAAV,CAA+B,CAA/B,EAAkC,EAAlC,EAAsC,EAAtC,CAAf;AACA,UAAIC,MAAM,GAAG,IAAIP,KAAK,CAACQ,aAAV,CAAwBJ,cAAxB,CAAb;AACA,UAAIK,OAAO,GAAGF,MAAM,CAACG,IAAP,CAAYT,YAAZ,CAAd;AACA,UAAIU,QAAQ,GAAG,IAAIX,KAAK,CAACY,oBAAV,CAA+B;AAC1CC,QAAAA,GAAG,EAAEJ,OADqC;AAE1CK,QAAAA,SAAS,EAAE,EAF+B;AAG1CC,QAAAA,SAAS,EAAE,GAH+B;AAI1CC,QAAAA,QAAQ,EAAE;AAJgC,OAA/B,CAAf,CAJyB,CAWzB;;AACA,UAAIC,IAAI,GAAG,IAAIjB,KAAK,CAACkB,IAAV,CAAeb,QAAf,EAAyBM,QAAzB,CAAX,CAZyB,CAczB;;AACA,aAAOM,IAAP;AACH,KAjB4B;AAAA;;AAAA","sourcesContent":["import * as THREE from 'three';\nimport metalTexture from './../../Assets/Textures/earth.jpg';\n\nexport default class MetalSpshere{\n    create = (loadingManager) => {\n        let geometry = new THREE.SphereBufferGeometry(1, 34, 34);\n        let loader = new THREE.TextureLoader(loadingManager);\n        let texture = loader.load(metalTexture);\n        let material = new THREE.MeshStandardMaterial({\n            map: texture,\n            metalness: .9,\n            roughness: .65,\n            emissive: 0x222529,\n        });\n\n        //Assign geometry and material to the mesh\n        let mesh = new THREE.Mesh(geometry, material);\n\n        //Return the mesh\n        return mesh;\n    }\n}"]},"metadata":{},"sourceType":"module"}